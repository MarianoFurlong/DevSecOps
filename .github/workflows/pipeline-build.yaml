name: GOAT Compile

on:
  push:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3

      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target

  sca:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build project with Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: "Compilacion"
        run: ./mvnw clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it

      - name: Upload Test results
        uses: actions/upload-artifact@main
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

      - name: "Revision del reporte"
        run: ls -ltra ${{github.workspace}}/reports

  horusec-security:
    name: horusec-security
    runs-on: ubuntu-latest
    steps:
    - name: Revisar c√≥digo
      uses: actions/checkout@v3
    - name: Running Horusec Security
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
        horusec start -p="./" -e="false"

  - name: Build and push Docker image
    uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
    with:
      context: .
      push: true
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    - name: "Docker-image"
      ports: 80:80
      run: |
        sudo docker build -t michis ../../../../
