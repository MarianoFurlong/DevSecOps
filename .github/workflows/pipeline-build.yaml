name: GOAT Compile

on:
  push:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3

      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target

  sca:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build project with Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: "Compilacion"
        run: ./mvnw clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'HTML'
          out: 'reports' 

      - name: Upload Test results
        uses: actions/upload-artifact@main
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

      - name: "Revision del reporte"
        run: ls -ltra ${{github.workspace}}/reports
      - name: "Imagen Docker"
        run: |
          docker build -f Dockerfile . -t webgoat/test
          docker images
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'webgoat/test'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          SCANNERS: vuln,secret,config
          timeout: 20m
        continue-on-error: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: "Correrse en el contenedor"
        run: docker run -d webgoat/test
      - name: "Iniciar el contenedor"
        run: docker run -d -p 8080:8080 --name michiote webgoat/test
      - name: "Listar"
        run: docker ps -a      
      - name: "Installing Arachni"
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
 
      - name: "Finding IP"
        run: var_IP=$(docker inspect WebGoat | grep "IPAddress" | tail -1 | cut -d '"' -f 4)
 
      - name: "Executing Arachni"
        run: ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=*http://$var_IP:8080/WebGoat/login
        
  horusec-security:
    name: horusec-security
    runs-on: ubuntu-latest
    steps:
    - name: Revisar c√≥digo
      uses: actions/checkout@v3
    - name: Running Horusec Security
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
        horusec start -p="./" -e="false"
