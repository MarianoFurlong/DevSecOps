name: GOAT Compile
on:
  push:
    branches:
      - main
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: "Compilacion"
        run: ./mvnw clean install
      - name: "Verificar paquete"
        run: ls -ltra target

      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: Terraform
          framework: terraform
          output_format: cli,sarif
          output_file_path: console,results.sarif
        continue-on-error: true
  
      - name: "Imagen Docker"
        run: "docker build -t prueba:latest ./"

      - name: "Muestra imagenes de docker"
        run: docker images
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: "Imagen AWS"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/m0u9d4i7
          docker build -t mariano .
          docker tag mariano:latest public.ecr.aws/m0u9d4i7/mariano:latest
          docker push public.ecr.aws/m0u9d4i7/mariano:latest
      - name: "Terraform"
        run: |
          cd Terraform
          terraform init
          terraform plan -out tfplan
          terraform apply tfplan >> result_tfplan.txt
          ip_webgoat=$(cat result_tfplan.txt | grep "My_ip = "| awk '{ print $3 }' | sed 's/*//g')
          sed -i "s/IP/$ip_webgoat/g" ../Ansible/inventario
        continue-on-error: true  
          

      - name: "Ansible"
        env:
          ANSIBLE_KEY: ${{ secrets.ANSIBLE_KEY }}
        run: |
          sudo apt update
          sudo apt install -y ansible
          cd Ansible/
          echo "$ANSIBLE_KEY" >> $HOME/key.pem
          sudo chmod 600 $HOME/key.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventario server.yaml --become --private-key $HOME/key.pem
          echo "Up server..."
          sleep 45
        continue-on-error: true 

      - name: Ejecutar escaneo Arachnii
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          ip_webgoat=$(cat Terraform/result_tfplan.txt | grep "My_ip = "| awk '{ print $3 }' | sed 's/"//g')
          curl http://$ip_webgoat:8080/WebGoat/login
          ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$ip_webgoat:8080/WebGoat/login
      
      - name: "Matar Contenedor"
        run: |
          cd Terraform
          terraform plan -destroy -out tfplan
          terraform apply tfplan

 